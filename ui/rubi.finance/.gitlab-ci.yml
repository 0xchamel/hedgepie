variables:
  RUBI_DIR: $CI_PROJECT_DIR/ui/rubi.finance

cache:
  paths:
    - $RUBI_DIR/node_modules/

rubi_create_env:
  stage: prepare
  image: alpine
  before_script:
    - cd $RUBI_DIR
  script:
    - |-
      if [ "$CI_COMMIT_BRANCH" = "production" ]
      then
        cat $RUBI_ENV_PRODUCTION > .env
      else
        cat $RUBI_ENV_STAGING > .env
      fi
  artifacts:
    paths:
      - $RUBI_DIR/.env
    expire_in: 1 day
  rules:
    - if: '($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event") && ($CI_COMMIT_BRANCH == "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" || $CI_COMMIT_BRANCH == "production" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "production")'
      changes:
        - "ui/rubi.finance/**/*"
      when: always
    - if: '$FORCE_PIPELINE == "true" || $FORCE_RUBI_PIPELINE == "true"'
      when: always

rubi_unit_tests:
  stage: test
  image: node:lts-alpine3.14
  before_script:
    - cd $RUBI_DIR
    - npm ci
  script:
    - npm run test
  rules:
    - if: '($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event") && ($CI_COMMIT_BRANCH == "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" || $CI_COMMIT_BRANCH == "production" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "production")'
      changes:
        - "ui/rubi.finance/**/*"
      when: always
    - if: '$FORCE_PIPELINE == "true" || $FORCE_RUBI_PIPELINE == "true"'
      when: always

rubi_build:
  stage: build
  image: node:lts-alpine3.14
  before_script:
    - cd $RUBI_DIR
  script:
    - NODE_ENV=production CI=false npm run build
  artifacts:
    paths:
      - ui/rubi.finance/www
    expire_in: 1 day
  rules:
    - if: '($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event") && ($CI_COMMIT_BRANCH == "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" || $CI_COMMIT_BRANCH == "production" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "production")'
      changes:
        - "ui/rubi.finance/**/*"
      when: on_success
    - if: '$FORCE_PIPELINE == "true" || $FORCE_RUBI_PIPELINE == "true"'
      when: on_success
  needs:
    - rubi_create_env
    - rubi_unit_tests

rubi_deploy:
  stage: deploy
  image: node:latest
  variables:
    NODE_ENV: production
    PACKAGE_RELATIVE_PATH: ui/rubi.finance
    DEPLOY_TARGET: hosting:rubi
  before_script:
    - |-
      if [ "$CI_COMMIT_BRANCH" = "production" ]
      then
        export GCLOUD_PROJECT_ID=$GCLOUD_PRODUCTION_PROJECT_ID
        export GOOGLE_PROJECT_ID=$GCLOUD_PRODUCTION_PROJECT_ID
      else
        export GCLOUD_PROJECT_ID=$GCLOUD_STAGING_PROJECT_ID
        export GOOGLE_PROJECT_ID=$GCLOUD_STAGING_PROJECT_ID
      fi
    - npm install -g --cache .npm --prefer-offline firebase-tools
  script:
    - firebase use $GCLOUD_PROJECT_ID
    - firebase deploy --only $DEPLOY_TARGET --token "$FIREBASE_TOKEN"
  rules:
    - if: '($CI_PIPELINE_SOURCE == "push") && ($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "production")'
      changes:
        - "ui/rubi.finance/**/*"
      when: on_success
    - if: '$FORCE_PIPELINE == "true" || $FORCE_RUBI_PIPELINE == "true"'
      when: on_success
  needs:
    - rubi_build
